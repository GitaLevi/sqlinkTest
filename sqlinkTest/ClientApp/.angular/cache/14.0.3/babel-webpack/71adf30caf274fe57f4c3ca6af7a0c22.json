{"ast":null,"code":"import { BehaviorSubject, map } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { cookieKeys } from '../models/emum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./local-storage.service\";\nimport * as i3 from \"@angular/router\";\nexport let AccountService = /*#__PURE__*/(() => {\n  class AccountService {\n    constructor(httpClient, localStorageService, router) {\n      this.httpClient = httpClient;\n      this.localStorageService = localStorageService;\n      this.router = router;\n      this.userJson = localStorageService.get(cookieKeys.user);\n      this.userSubject = new BehaviorSubject(this.userJson ? JSON.parse(this.userJson) : null);\n    }\n\n    loginUser(user) {\n      return this.httpClient.post(`${environment.apiUrl}/UserDetails`, user).pipe(map(user => {\n        if (user) {\n          this.localStorageService.set(cookieKeys.token, user.token);\n          this.localStorageService.set(cookieKeys.user, JSON.stringify(user));\n          this.userSubject.next(user);\n        }\n\n        return user;\n      }));\n    }\n\n    getUserValue() {\n      return this.userSubject.value;\n    }\n\n    logout() {\n      localStorage.removeItem(cookieKeys.user);\n      this.userSubject.next(null);\n      this.router.navigate(['/login']);\n    }\n\n  }\n\n  AccountService.ɵfac = function AccountService_Factory(t) {\n    return new (t || AccountService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.LocalStorageService), i0.ɵɵinject(i3.Router));\n  };\n\n  AccountService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AccountService,\n    factory: AccountService.ɵfac,\n    providedIn: 'root'\n  });\n  return AccountService;\n})();","map":null,"metadata":{},"sourceType":"module"}