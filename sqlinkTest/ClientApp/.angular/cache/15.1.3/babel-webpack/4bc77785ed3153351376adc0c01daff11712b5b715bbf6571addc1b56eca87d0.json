{"ast":null,"code":"import { MatSort } from '@angular/material/sort';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/projects-details.service\";\nimport * as i2 from \"src/app/services/loading.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/table\";\nimport * as i5 from \"@angular/material/sort\";\nfunction ProjectsCardComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const project_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", project_r4.id, \"\\n\");\n  }\n}\nfunction ProjectsCardComponent_ng_container_3_mat_header_cell_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const column_r5 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", column_r5.value, \"\");\n  }\n}\nfunction ProjectsCardComponent_ng_container_3_mat_cell_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r11 = ctx.$implicit;\n    const column_r5 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r11[column_r5.id], \"\");\n  }\n}\nfunction ProjectsCardComponent_ng_container_3_th_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const column_r5 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", column_r5.value, \" \");\n  }\n}\nfunction ProjectsCardComponent_ng_container_3_td_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r14 = ctx.$implicit;\n    const column_r5 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r14[column_r5.id], \" \");\n  }\n}\nfunction ProjectsCardComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 6);\n    i0.ɵɵtemplate(1, ProjectsCardComponent_ng_container_3_mat_header_cell_1_Template, 2, 1, \"mat-header-cell\", 7);\n    i0.ɵɵtemplate(2, ProjectsCardComponent_ng_container_3_mat_cell_2_Template, 2, 1, \"mat-cell\", 8);\n    i0.ɵɵtemplate(3, ProjectsCardComponent_ng_container_3_th_3_Template, 2, 1, \"th\", 9);\n    i0.ɵɵtemplate(4, ProjectsCardComponent_ng_container_3_td_4_Template, 2, 1, \"td\", 10);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const column_r5 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"matColumnDef\", column_r5.id);\n  }\n}\nfunction ProjectsCardComponent_tr_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 14);\n  }\n}\nfunction ProjectsCardComponent_tr_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 15);\n  }\n}\n// export interface PeriodicElement {\n//   name: string;\n//   position: number;\n//   weight: number;\n//   symbol: string;\n// }\n// const ELEMENT_DATA: PeriodicElement[] = [\n//   {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n//   {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n//   {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n//   {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n//   {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n//   {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n//   {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n//   {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n//   {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n//   {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n// ];\nexport class ProjectsCardComponent {\n  constructor(projectDetailsService, loadingService) {\n    this.projectDetailsService = projectDetailsService;\n    this.loadingService = loadingService;\n    this.columnNames = [{\n      id: 'name',\n      value: 'name'\n    }, {\n      id: 'score',\n      value: 'score'\n    }, {\n      id: 'durationInDays',\n      value: 'durationInDays'\n    }, {\n      id: 'bugsCount',\n      value: 'bugsCount'\n    }, {\n      id: 'madeDadeline',\n      value: 'madeDadeline'\n    }];\n  }\n  ngOnInit() {\n    this.displayedColumns = this.columnNames.map(x => x.id);\n    this.getUserProjects();\n    // this.createTable();\n  }\n\n  ngAfterViewInit() {\n    this.loadingService.loadingSubject.next(true);\n    this.projectDetailsService.getProjectsByUserId().subscribe(response => {\n      this.projectsList = response;\n      this.dataSource = this.projectsList;\n      // this.dataSource.sort = this.sort;\n      this.loadingService.loadingSubject.next(false);\n    });\n  }\n  // applyFilter(event: Event) {\n  //   const filterValue = (event.target as HTMLInputElement).value;\n  //   this.dataSource.filter = filterValue.trim().toLowerCase();\n  // }\n  getUserProjects() {\n    // this.loadingService.loadingSubject.next(true);\n    // this.projectDetailsService.getProjectsByUserId().subscribe((response: projectModel[]) => {\n    //   this.projectsList = response;\n    //   this.dataSource = this.projectsList;\n    //   // this.dataSource.sort = this.sort;\n    //   this.loadingService.loadingSubject.next(false);\n    // });\n  }\n}\nProjectsCardComponent.ɵfac = function ProjectsCardComponent_Factory(t) {\n  return new (t || ProjectsCardComponent)(i0.ɵɵdirectiveInject(i1.ProjectsDetailsService), i0.ɵɵdirectiveInject(i2.LoadingService));\n};\nProjectsCardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProjectsCardComponent,\n  selectors: [[\"app-projects-card\"]],\n  viewQuery: function ProjectsCardComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(MatSort, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n    }\n  },\n  decls: 6,\n  vars: 5,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [1, \"example-header\"], [\"mat-table\", \"\", \"matSort\", \"\", 1, \"mat-elevation-z8\", 3, \"dataSource\"], [3, \"matColumnDef\", 4, \"ngFor\", \"ngForOf\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [3, \"matColumnDef\"], [\"mat-sort-header\", \"\", 4, \"matHeaderCellDef\"], [4, \"matCellDef\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"mat-sort-header\", \"\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"]],\n  template: function ProjectsCardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ProjectsCardComponent_div_0_Template, 2, 1, \"div\", 0);\n      i0.ɵɵelement(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"table\", 2);\n      i0.ɵɵtemplate(3, ProjectsCardComponent_ng_container_3_Template, 5, 1, \"ng-container\", 3);\n      i0.ɵɵtemplate(4, ProjectsCardComponent_tr_4_Template, 1, 0, \"tr\", 4);\n      i0.ɵɵtemplate(5, ProjectsCardComponent_tr_5_Template, 1, 0, \"tr\", 5);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.projectsList);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.columnNames);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.MatTable, i4.MatHeaderCellDef, i4.MatHeaderRowDef, i4.MatColumnDef, i4.MatCellDef, i4.MatRowDef, i4.MatHeaderCell, i4.MatCell, i4.MatHeaderRow, i4.MatRow, i5.MatSort, i5.MatSortHeader],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,OAAO,QAAQ,wBAAwB;;;;;;;;;ICDhDC,2BAA0C;IACtCA,YACJ;IAAAA,iBAAM;;;;IADFA,eACJ;IADIA,+CACJ;;;;;IA4DQA,2CAAmD;IAACA,YAAgB;IAAAA,iBAAkB;;;;IAAlCA,eAAgB;IAAhBA,+CAAgB;;;;;IACpEA,gCAAoC;IAACA,YAAsB;IAAAA,iBAAW;;;;;IAAjCA,eAAsB;IAAtBA,yDAAsB;;;;;IAC3DA,8BAAsC;IAACA,YAAiB;IAAAA,iBAAK;;;;IAAtBA,eAAiB;IAAjBA,gDAAiB;;;;;IACxDA,8BAAuC;IAACA,YAAuB;IAAAA,iBAAK;;;;;IAA5BA,eAAuB;IAAvBA,0DAAuB;;;;;IAJnEA,gCAA8E;IAC1EA,6GAAsF;IACtFA,+FAAsE;IACtEA,mFAA6D;IAC7DA,oFAAoE;IACxEA,0BAAe;;;;IALDA,sDAA4B;;;;;IAM1CA,yBAA4D;;;;;IAC5DA,yBAAkE;;;AD7DtE;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAWA,OAAM,MAAOC,qBAAqB;EA6BhCC,YAAoBC,qBAA6C,EACvDC,cAA8B;IADpB,0BAAqB,GAArBD,qBAAqB;IAC/B,mBAAc,GAAdC,cAAc;IArBxB,gBAAW,GAAG,CAAC;MACbC,EAAE,EAAE,MAAM;MACVC,KAAK,EAAE;KAER,EAAE;MACDD,EAAE,EAAE,OAAO;MACXC,KAAK,EAAE;KACR,EACD;MACED,EAAE,EAAE,gBAAgB;MACpBC,KAAK,EAAE;KACR,EACD;MACED,EAAE,EAAE,WAAW;MACfC,KAAK,EAAE;KACR,EACD;MACED,EAAE,EAAE,cAAc;MAClBC,KAAK,EAAE;KACR,CAAC;EAE0C;EAE5CC,QAAQ;IACN,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACC,WAAW,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACN,EAAE,CAAC;IACvD,IAAI,CAACO,eAAe,EAAE;IACtB;EACF;;EAEAC,eAAe;IACb,IAAI,CAACT,cAAc,CAACU,cAAc,CAACC,IAAI,CAAC,IAAI,CAAC;IAC7C,IAAI,CAACZ,qBAAqB,CAACa,mBAAmB,EAAE,CAACC,SAAS,CAAEC,QAAwB,IAAI;MACtF,IAAI,CAACC,YAAY,GAAGD,QAAQ;MAC5B,IAAI,CAACE,UAAU,GAAG,IAAI,CAACD,YAAY;MACnC;MACA,IAAI,CAACf,cAAc,CAACU,cAAc,CAACC,IAAI,CAAC,KAAK,CAAC;IAChD,CAAC,CAAC;EACJ;EAGA;EACA;EACA;EACA;EACAH,eAAe;IACb;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;;AA5DSX,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAoB;EAAAC;IAAA;qBAOrBvB,OAAO;;;;;;;;;;;;MC3CpBC,sEAEM;MAoDNA,yBAIM;MAENA,gCAA4E;MACxEA,wFAKe;MACfA,oEAA4D;MAC5DA,oEAAkE;MACtEA,iBAAQ;;;MArEiBA,0CAAe;MA4DvBA,eAAyB;MAAzBA,2CAAyB;MACwBA,eAAc;MAAdA,yCAAc;MAMxDA,eAAiC;MAAjCA,sDAAiC;MACpBA,eAA0B;MAA1BA,uDAA0B","names":["MatSort","i0","ProjectsCardComponent","constructor","projectDetailsService","loadingService","id","value","ngOnInit","displayedColumns","columnNames","map","x","getUserProjects","ngAfterViewInit","loadingSubject","next","getProjectsByUserId","subscribe","response","projectsList","dataSource","selectors","viewQuery"],"sourceRoot":"","sources":["C:\\Users\\user\\source\\repos\\sqlinkTest\\sqlinkTest\\ClientApp\\src\\app\\components\\projects-card\\projects-card.component.ts","C:\\Users\\user\\source\\repos\\sqlinkTest\\sqlinkTest\\ClientApp\\src\\app\\components\\projects-card\\projects-card.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { projectModel } from 'src/app/models/projectModel';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { ProjectsDetailsService } from 'src/app/services/projects-details.service';\n\n\n// export interface PeriodicElement {\n//   name: string;\n//   position: number;\n//   weight: number;\n//   symbol: string;\n// }\n\n// const ELEMENT_DATA: PeriodicElement[] = [\n//   {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n//   {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n//   {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n//   {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n//   {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n//   {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n//   {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n//   {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n//   {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n//   {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n// ];\n\n\n\n\n@Component({\n  selector: 'app-projects-card',\n  templateUrl: './projects-card.component.html',\n  styleUrls: ['./projects-card.component.scss']\n})\n\nexport class ProjectsCardComponent implements OnInit {\n\n  projectsList: projectModel[];\n  dataSource: projectModel[];\n  //dataSource = ELEMENT_DATA;\n\n  displayedColumns: string[];\n  @ViewChild(MatSort) sort: MatSort;\n\n  columnNames = [{\n    id: 'name',\n    value: 'name',\n\n  }, {\n    id: 'score',\n    value: 'score',\n  },\n  {\n    id: 'durationInDays',\n    value: 'durationInDays',\n  },\n  {\n    id: 'bugsCount',\n    value: 'bugsCount',\n  },\n  {\n    id: 'madeDadeline',\n    value: 'madeDadeline',\n  }];\n  constructor(private projectDetailsService: ProjectsDetailsService,\n    private loadingService: LoadingService) { }\n\n  ngOnInit(): void {\n    this.displayedColumns = this.columnNames.map(x => x.id);\n    this.getUserProjects();\n    // this.createTable();\n  }\n\n  ngAfterViewInit(): void {\n    this.loadingService.loadingSubject.next(true);\n    this.projectDetailsService.getProjectsByUserId().subscribe((response: projectModel[]) => {\n      this.projectsList = response;\n      this.dataSource = this.projectsList;\n      // this.dataSource.sort = this.sort;\n      this.loadingService.loadingSubject.next(false);\n    });\n  }\n\n\n  // applyFilter(event: Event) {\n  //   const filterValue = (event.target as HTMLInputElement).value;\n  //   this.dataSource.filter = filterValue.trim().toLowerCase();\n  // }\n  getUserProjects() {\n    // this.loadingService.loadingSubject.next(true);\n    // this.projectDetailsService.getProjectsByUserId().subscribe((response: projectModel[]) => {\n    //   this.projectsList = response;\n    //   this.dataSource = this.projectsList;\n    //   // this.dataSource.sort = this.sort;\n    //   this.loadingService.loadingSubject.next(false);\n    // });\n  }\n}\n","<div *ngFor=\"let project of projectsList\">\n    {{project.id}}\n</div>\n\n<!-- <mat-form-field>\n    <mat-label>Filter</mat-label>\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. ium\" #input>\n</mat-form-field> -->\n\n<!-- <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n    <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef> name</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"score\">\n        <th mat-header-cell *matHeaderCellDef> score </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.score}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"durationInDays\">\n        <th mat-header-cell *matHeaderCellDef> durationInDays </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.durationInDays}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"bugsCount\">\n        <th mat-header-cell *matHeaderCellDef> bugsCount </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.bugsCount}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"madeDadeline\">\n        <th mat-header-cell *matHeaderCellDef> madeDadeline </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.madeDadeline}} </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n    <tr class=\"mat-row\" *matNoDataRow>\n        <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n    </tr>\n</table> -->\n\n<!-- <mat-table #table [dataSource]=\"dataSource\" matSort>\n    <ng-container matColumnDef=\"{{column.id}}\" *ngFor=\"let column of columnNames\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header> {{column.value}}</mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element[column.id]}}</mat-cell>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n</mat-table> -->\n\n<div class=\"example-header\">\n    <!-- <mat-form-field>\n      <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\n    </mat-form-field> -->\n</div>\n\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" matSort>\n    <ng-container matColumnDef=\"{{column.id}}\" *ngFor=\"let column of columnNames\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header> {{column.value}}</mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element[column.id]}}</mat-cell>\n        <th mat-header-cell *matHeaderCellDef> {{column.value}} </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element[column.id]}} </td>\n    </ng-container>\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n\n<!-- \n<mat-table  class=\"lessons-table mat-elevation-z8\" [dataSource]=\"dataSource\">\n\n    <ng-container matColumnDef=\"seqNo\">\n        <div *matHeaderCellDef>#</div>\n        <div *matCellDef=\"let lesson\">{{lesson.seqNo}}</div>\n    </ng-container>\n\n    <ng-container matColumnDef=\"description\">\n        <div *matHeaderCellDef>Description</div>\n        <div class=\"description-cell\" *matCellDef=\"let lesson\">{{lesson.description}}</div>\n    </ng-container>\n\n    <ng-container matColumnDef=\"duration\">\n        <div *matHeaderCellDef>Duration</div>\n        <div class=\"duration-cell\" *matCellDef=\"let lesson\">{{lesson.duration}}</div>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n\n    <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\n\n</mat-table>\n -->"]},"metadata":{},"sourceType":"module","externalDependencies":[]}