{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { ChangeDetectionStrategy, Component, ViewChild } from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nlet ProjectsCardComponent = class ProjectsCardComponent {\n  constructor(projectDetailsService, loadingService, cdRef) {\n    this.projectDetailsService = projectDetailsService;\n    this.loadingService = loadingService;\n    this.cdRef = cdRef;\n    this.dataSource = new MatTableDataSource();\n    this.columnNames = [{\n      id: 'name',\n      value: 'name'\n    }, {\n      id: 'score',\n      value: 'score'\n    }, {\n      id: 'durationInDays',\n      value: 'durationInDays'\n    }, {\n      id: 'bugsCount',\n      value: 'bugsCount'\n    }, {\n      id: 'madeDadeline',\n      value: 'madeDadeline'\n    }];\n  }\n  ngOnInit() {\n    this.displayedColumns = this.columnNames.map(x => x.id);\n    this.getUserProjects();\n  }\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n  }\n  applyFilter(event) {\n    const filterValue = event.target.value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  getUserProjects() {\n    this.loadingService.loadingSubject.next(true);\n    this.projectDetailsService.getProjectsByUserId().subscribe(response => {\n      this.projectsList = response;\n      this.dataSource = new MatTableDataSource(this.projectsList);\n      this.dataSource.sort = this.sort;\n      this.loadingService.loadingSubject.next(false);\n      this.cdRef.detectChanges();\n    });\n  }\n};\n__decorate([ViewChild(MatSort)], ProjectsCardComponent.prototype, \"sort\", void 0);\nProjectsCardComponent = __decorate([Component({\n  selector: 'app-projects-card',\n  templateUrl: './projects-card.component.html',\n  styleUrls: ['./projects-card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})], ProjectsCardComponent);\nexport { ProjectsCardComponent };","map":{"version":3,"mappings":";AAAA,SAASA,uBAAuB,EAAqBC,SAAS,EAAUC,SAAS,QAAQ,eAAe;AACxG,SAASC,OAAO,QAAc,wBAAwB;AAItD,SAASC,kBAAkB,QAAQ,yBAAyB;AAUrD,IAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EA0BhCC,YAAoBC,qBAA6C,EACvDC,cAA8B,EAC9BC,KAAwB;IAFd,0BAAqB,GAArBF,qBAAqB;IAC/B,mBAAc,GAAdC,cAAc;IACd,UAAK,GAALC,KAAK;IA1Bf,eAAU,GAAG,IAAIL,kBAAkB,EAAgB;IAInD,gBAAW,GAAG,CAAC;MACbM,EAAE,EAAE,MAAM;MACVC,KAAK,EAAE;KAER,EAAE;MACDD,EAAE,EAAE,OAAO;MACXC,KAAK,EAAE;KACR,EACD;MACED,EAAE,EAAE,gBAAgB;MACpBC,KAAK,EAAE;KACR,EACD;MACED,EAAE,EAAE,WAAW;MACfC,KAAK,EAAE;KACR,EACD;MACED,EAAE,EAAE,cAAc;MAClBC,KAAK,EAAE;KACR,CAAC;EAGoC;EAEtCC,QAAQ;IACN,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACC,WAAW,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACN,EAAE,CAAC;IACvD,IAAI,CAACO,eAAe,EAAE;EACxB;EAEAC,eAAe;IACb,IAAI,CAACC,UAAU,CAACC,IAAI,GAAG,IAAI,CAACA,IAAI;EAClC;EAEAC,WAAW,CAACC,KAAY;IACtB,MAAMC,WAAW,GAAID,KAAK,CAACE,MAA2B,CAACb,KAAK;IAC5D,IAAI,CAACQ,UAAU,CAACM,MAAM,GAAGF,WAAW,CAACG,IAAI,EAAE,CAACC,WAAW,EAAE;EAC3D;EAEAV,eAAe;IACb,IAAI,CAACT,cAAc,CAACoB,cAAc,CAACC,IAAI,CAAC,IAAI,CAAC;IAC7C,IAAI,CAACtB,qBAAqB,CAACuB,mBAAmB,EAAE,CAACC,SAAS,CAAEC,QAAwB,IAAI;MACtF,IAAI,CAACC,YAAY,GAAGD,QAAQ;MAC5B,IAAI,CAACb,UAAU,GAAG,IAAIf,kBAAkB,CAAC,IAAI,CAAC6B,YAAY,CAAC;MAC3D,IAAI,CAACd,UAAU,CAACC,IAAI,GAAG,IAAI,CAACA,IAAI;MAChC,IAAI,CAACZ,cAAc,CAACoB,cAAc,CAACC,IAAI,CAAC,KAAK,CAAC;MAC9C,IAAI,CAACpB,KAAK,CAACyB,aAAa,EAAE;IAC5B,CAAC,CAAC;EACJ;CACD;AAlDqBC,YAAnBjC,SAAS,CAACC,OAAO,CAAC,mDAAe;AAJvBE,qBAAqB,eARjCJ,SAAS,CAAC;EACTmC,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,gCAAgC,CAAC;EAC7CC,eAAe,EAAEvC,uBAAuB,CAACwC;CAE1C,CAAC,GAEWnC,qBAAqB,CAsDjC;SAtDYA,qBAAqB","names":["ChangeDetectionStrategy","Component","ViewChild","MatSort","MatTableDataSource","ProjectsCardComponent","constructor","projectDetailsService","loadingService","cdRef","id","value","ngOnInit","displayedColumns","columnNames","map","x","getUserProjects","ngAfterViewInit","dataSource","sort","applyFilter","event","filterValue","target","filter","trim","toLowerCase","loadingSubject","next","getProjectsByUserId","subscribe","response","projectsList","detectChanges","__decorate","selector","templateUrl","styleUrls","changeDetection","OnPush"],"sourceRoot":"","sources":["C:\\Users\\user\\source\\repos\\sqlinkTest\\sqlinkTest\\ClientApp\\src\\app\\components\\projects-card\\projects-card.component.ts"],"sourcesContent":["import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSort, Sort } from '@angular/material/sort';\nimport { projectModel } from 'src/app/models/projectModel';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { ProjectsDetailsService } from 'src/app/services/projects-details.service';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'app-projects-card',\n  templateUrl: './projects-card.component.html',\n  styleUrls: ['./projects-card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n\n})\n\nexport class ProjectsCardComponent implements OnInit {\n  projectsList: projectModel[];\n  dataSource = new MatTableDataSource<projectModel>();\n  displayedColumns: string[];\n  @ViewChild(MatSort) sort: MatSort;\n\n  columnNames = [{\n    id: 'name',\n    value: 'name',\n\n  }, {\n    id: 'score',\n    value: 'score',\n  },\n  {\n    id: 'durationInDays',\n    value: 'durationInDays',\n  },\n  {\n    id: 'bugsCount',\n    value: 'bugsCount',\n  },\n  {\n    id: 'madeDadeline',\n    value: 'madeDadeline',\n  }];\n  constructor(private projectDetailsService: ProjectsDetailsService,\n    private loadingService: LoadingService,\n    private cdRef: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this.displayedColumns = this.columnNames.map(x => x.id);\n    this.getUserProjects();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  getUserProjects() {\n    this.loadingService.loadingSubject.next(true);\n    this.projectDetailsService.getProjectsByUserId().subscribe((response: projectModel[]) => {\n      this.projectsList = response;\n      this.dataSource = new MatTableDataSource(this.projectsList);\n      this.dataSource.sort = this.sort;\n      this.loadingService.loadingSubject.next(false);\n      this.cdRef.detectChanges();\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}